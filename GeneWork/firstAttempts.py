"""
AUTHOR: Sebastian Gutierrez-Olvera
GITHUB: Sebas-2000
DATE: 6/28/2023
DATE LAST MODIFIED: 6/30/2023
NOTE: Retired code that should only be used for reference
"""

# Press ⌃R to execute it or replace it with your code.
# Press Double ⇧ to search everywhere for classes, files, tool windows, actions, and settings.



sampleDNA = "TCGATCCCTTCCACTTCTACTCTCTTTTATTTCCTTCCGATCCGATCCTCTCGCTTGATTCGATCATGGCGGGCGGCAGCTTCACCGAGAAGGGCAAGCAGTATCCGGGGAAGATGACGGTGTTCGTCTTCCTCGCCTGCCTCGTCGCCTCCTCCGGCGGCCTCATCTTCGGATACGACATTGGCATCTCAGGTACGTATATATATATATATATATAATCAATCTGCTCATCATCGATCTCCTTCGTCCAGCATTCCACCATCCATCCATCGTCGATGATATCGACGAACGAATTGCATGCGATTAATGCGTGAACAATATGCAGGCGGCGTGACGTCCATGGACCCGTTCCTGGAGCAATTCTTCCCGTCGGTGTACGCCAAGGAGCAGGAGGTGGTGGAGACGAACCAGTACTGCAAGTTCGACAGCGTGCTGCTGACGCTCTTCACCTCCTCGCACTACCTCGCCGCGCTCGTCGCCTCCCTCTTCGCCGGCTACATCACCAGCAGGTGCGGCCGCAGGGTGTCCATGCTCGGCGGCGGCGTCATCTTCCTCGTCGGCGCCGTCCTCAACGGCTTCGCCCAGAACGTCGCCATGCTCATCATCGGCAGGATCTTCCTCGGCATCGGCGTCGGGTTCAGCAATCAGGTCAGTGCACCGCCCTTCATTTTAGTTTTAATTTGTTTTAGAGATCTCCTTTCTTTATTTTCTTTTTTTTGCACGTGATAATTAGTTACTTACGTGCATGCACTCATGCATCCGTAACGACCGGCCGGTTTAGTCCATTATACACGTCAACCGGATAAAATCGATTTAGATCGACCTAGCGATCGAGCATCCAAGTTTTTTTTGTATAGAAGACAGGATCGATGGATCAGAATGTTGATCTGTATGAATGTGCACTATATATGCTGCAGTCCGTGCCGCTGTACCTGTCGGAGATGGCGCCGGCGAAGATGCGGGGCATGCTCAACATCAGCTTCCAGCTGATGATCACCATCGGCATCCTCATCGCCAACCTCATCAACTACTTCACGGCCAAGATCGCCGGCGGCTGGGGCTGGCGCATCGGCCTCGGGCTGGCCGCCGTCCCGGCCGTCATCATGGTCGGCGGCTCCATCTTCCTCCCGGACACGCCCAACTCTCTGGTCGCCCGGGGCAAGGTGGAGAGCGCGCGCGCCATGCTCCGGCGCATCCGCGGCACCGACGACGTCTCGCTGGAGTTCGACGACCTCCTGGCGGCCAGCGAGGCCACCAAGGCCATCGAGAGCCCGTGGCGGACGCTCCTGCAGCGCCGGTACCGGCCGCAGCTGGTGATGGCGTTCCTCATCCCGACGCTGCAGCAGCTCACGGGGATCAACGTCGTCATGTTCTACGCACCCGTGCTCTTCAAGACCATCGGCTTCGGCGGCACCGCCTCGCTCATGTCCGCCGTCATCACGGGCCTCGTCAACATGTTCGCCACCTTCGTCTCCATCGCCACCGTCGACCGCCTCGGCCGCCGCAAGCTGCTCCTCCAGGGCGGCATCCAGATGATCCTTGCCCAGGTACACTACAGATTACAGAAACAGAATCATCGAATCCTTGTCGAAAACTTTGTCAATTGACTAATGCAATTAATGGCTGCATGCAGTTCGTTCTTGGGACGCTGATCGCCGTCAAGTTCGGGACGACGGGGGTGGCGGAGATCTCGCGGTCGTACGCGATCGGGGTGGTGTTCTGCATCTGCGTGTTCGTGTCGGCGTTCGCATGGTCGTGGGGGCCGCTGGGGTGGCTGGTGCCAAGCGAGATCTTCCCGCTGGAGATCCGGTCGGCGGCGCAGAGCGCGGTGGTGGTCTTCAACATGGTCTTCACCTTCGTCATCGCGCAGATCTTCCTGATGCTGCTCTGCCGCCTCAAGTTCGGCCTCTTCTACTTCTTCGGCGCCTGGGAGATCGCCATGACGCTCTTCGTCTACTTCTTCCTGCCGGAGACCAAGGGGATCCCCATCGAGGAGATGGACAGGATCTGGGCCAACCACTGGTACTGGAACCGCTTCGTCGATGCCGGCCGGAAGGTCCAGCTCACGTCCACCGCCGTATGACACTCGTCACTAGTTCGTGCTACATTTTTTATCTCGAGGGAAATTGTCATCCCTGTTTTTCAGATCTCAATCGACGGAAATTGTCATCCCTAGCGTAGCTAGTGAAACTTGATATTGTTTATTACTGTTGGAAACTGTTGACGTAAAAAAAATTATGAGCATCCCGGCCGGTTGTCATATACTCCCTCTTATTCCAAACATGGATCGATTTAAATTTATCCTACTATGTAAACTATTTTTAGAAAATCATCAATGGAGCCTGCATGTGATCTCTACGAGAT"
sampleRNA = """
CTGCACATGTCAGTACATCGGTCACTAGTGGACTGCACCGATCCACGCCGGTCGTCGGTCGTCCTCGTCA
GCTCAGCTCGAGAGAAACACTAGCCGACGGAGTGGAGAAGGAGAACCCAGGCCGGCCGCCGGCCCGATGG
AGCACGAGGATCAAGAAGCGCAGAAGCCTCTCCTGGTCACCGCGCCCGGGAGAAGCGGTGATGGCTGTGC
GTCCGGCGCCGCCTCGTCCTCCTCTTCGATTGCGGTGGTGGTCGCCAGCACCGCCGTCGCCGTCGCCGGA
TCCTTCGAGTTCGGCATCTCGGTCGGCTACTCGTCGCCTTCTCAGCCTGGCATCATGCGTGACCTCAACC
TCTCCTTAGCAGAGTACTCTCTCTTTGGCTCGATACTAACCATTGGAGCAATGCTAGGAGCTATTGTCAG
TGGTACCGTGGCAGACCGAGTTGGTCGAAGAAGTGCAATGGCGATATCAGATCTTCTCTGCATTCTTGGA
TATCTCTTGATAACCTTTTCCCAGAATTTCTGGTGGCTTGACATTGGAAGGTTCTCAATTGGATGTGGAA
TTGGCCTTCTTTCATATGTGGTTCCAGTCTATATATCAGAGATAACACCAAAGAATCTTAGAGGAGGATT
CGCAACTGTAAACCAGTTTATGATATGTTGTGGGGCATCACTTGCTTATGTTCTGGGAACTTTTATCACC
TGGCGGACTTTGGCAATCATTGGAGTGGCGCCATGTTTGCTGCAGTTGGTTGGCCTTCTTGTGACTCCTG
AGTCCCCAAGATGGCTGGCTAGGTTCGGCCACCCAGGTGCATTTGAGGCAGCATTACAGAAGCTAAGGGG
AAAAGCGACTGATATCTCTGACGAAGCAACAGAAATCAAAGATTTTACAGAAAAGCTTCAGCAATTACCA
GAGTCGAAAATGTTCGACCTGTTTCGGAAGGACTATATTCGTGCTGTTACAGTTGGAGTAGGGTTAATGG
TCCTTCAACAGTTTGGGGGAGTGAATGCCATTTGCTTTTATGCCAGTGAAATATTTGTTTCAGCCGGTTT
CTCATCAGGAAATACAGGAATGCTCGCTATGGTTGCTGTTCAGATTCCGATGACCGGACTAGGAGTACTT
CTAATGGACAAAGCTGGACGGAGGCCACTTTTGATGGTATCTGCAGCTGGAACATGCCTGGGTTGCCTAC
TAGTCGGTTTGTCATTCTTAGCTAAGGAACATCACTGGGGAAAGGATCTGAACTTAGTGCTGGCTTTGGC
AGGCATTCTGATTTTTGGCGGATCTTTTTCACTGGGTATGGGTGGAATACCATGGGTTATAATGTCAGAG
ATCTTTCCTATAAACATGAAAGGAGCAGCAGGAAGCCTTGTGACACTCGTCAGCTGGCTTGGTTCGTGGA
TTGTCTCATACGCCTTCAACTTCCTCTTGGTGTGGAACTCCTATGGCACATTCTTCATCTTTGCAAGCAT
CTGTGGGCTCACAGTTGTGTTTGTAGAGCGGCTGGTGCCAGAAACCAAAGGAAGAACCCTAGAGGAGATC
CAAGCATCCATGAACTCATCCTTAACGCCCCCCTTTCACTTATGATTTGCTTGTCTAGTTTACATAGCCA
AATACCTGGACGGGATGCGCATGTAAAGCTTCAGTGGTTATGTGGTTATTGTTTGTACACATACAAGTTT
GTATATCAAAAACATATGCAGTGTAATAGATATTTCTCTCGCTCCCTAAACCATGAATTAGAATTCATAC
ACAAAGTTCTGGTTCCATCAGTTTGTGGATCCTGCGTGACACTGATTGTCGATTTATACATTGATGTGGT
ATAGGCGTACAAAATTA
"""
START_CODON = "Met"
TERMINATION_CODON = "X"
tripleLetterCodonChart = {"UUU": "Phe", "UUC": "Phe", "UUA": "Leu", "UUG": "Leu", "UCU": "Ser", "UCC": "Ser",
                          "UCA": "Ser",
                          "UCG": "Ser",
                          "UAU": "Tyr", "UAC": "Tyr", "UAA": "STOP", "UAG": "STOP", "UGU": "Cys", "UGC": "Cys",
                          "UGA": "STOP",
                          "UGG": "Trp",
                          "CUU": "Leu", "CUC": "Leu", "CUA": "Leu", "CUG": "Leu", "CCU": "Pro", "CCC": "Pro",
                          "CCA": "Pro",
                          "CCG": "Pro",
                          "CAU": "His", "CAC": "His", "CAA": "Gln", "CAG": "Gln", "CGU": "Arg", "CGC": "Arg",
                          "CGA": "Arg",
                          "CGG": "Arg",
                          "AUU": "Ile", "AUC": "Ile", "AUA": "Ile", "AUG": "MET_START", "ACU": "Thr", "ACC": "Thr",
                          "ACA": "Thr",
                          "ACG": "Thr",
                          "AAU": "Asn", "AAC": "Asn", "AAA": "Lys", "AAG": "Lys", "AGU": "Ser", "AGC": "Ser",
                          "AGA": "Arg",
                          "AGG": "Arg",
                          "GUU": "Val", "GUC": "Val", "GUA": "Val", "GUG": "Val", "GCU": "Ala", "GCC": "Ala",
                          "GCA": "Ala",
                          "GCG": "Ala",
                          "GAU": "Asp", "GAC": "Asp", "GAA": "Glu", "GAG": "Glu", "GGU": "Gly", "GGC": "Gly",
                          "GGA": "Gly",
                          "GGG": "Gly", }
correctCodonChart = {
    "TTT": "F", "TTC": "F", "TTA": "L", "TTG": "L", "TCT": "S", "TCC": "S", "TCA": "S",
    "TCG": "S", "TAT": "Y", "TAC": "Y", "TAA": "X", "TAG": "X", "TGT": "C", "TGC": "C",
    "TGA": "X", "TGG": "W", "CTT": "L", "CTC": "L", "CTA": "L", "CTG": "L", "CCT": "P",
    "CCC": "P", "CCA": "P", "CCG": "P", "CAT": "H", "CAC": "H", "CAA": "Q", "CAG": "Q",
    "CGT": "R", "CGC": "R", "CGA": "R", "CGG": "R", "ATT": "I", "ATC": "I", "ATA": "I",
    "ATG": "M", "ACT": "T", "ACC": "T", "ACA": "T", "ACG": "T", "AAT": "N", "AAC": "N",
    "AAA": "K", "AAG": "K", "AGT": "S", "AGC": "S", "AGA": "R", "AGG": "R", "GTT": "V",
    "GTC": "V", "GTA": "V", "GTG": "V", "GCT": "A", "GCC": "A", "GCA": "A", "GCG": "A",
    "GAT": "D", "GAC": "D", "GAA": "E", "GAG": "E", "GGT": "G", "GGC": "G", "GGA": "G",
    "GGG": "G"
}


def transcriptionWRONG(DNA):
    # OUTDATED
    # string -> string
    # Transcribing DNA to mRNA
    # keep in mind mRNA has no T codon. A -> U,   T -> A,   C -> G,   G -> C
    mRNA = ""
    for i in DNA:
        if i == "A":
            mRNA += "U"
        if i == "T":
            mRNA += "A"
        if i == "C":
            mRNA += "G"
        if i == "G":
            mRNA += "C"
    return mRNA


def translationOLD(mRNA):
    # string -> string
    # translation of mRNA to an Amino Acid Sequence
    aminoAcidSequence = ""
    # if len(mRNA) % 3 == 0:
    for i in range(0, len(mRNA), 3):
        codon = mRNA[i:i + 3]
        aminoAcidSequence += (tripleLetterCodonChart[codon] + " ")
    return aminoAcidSequence


def translation(mRNA):
    protein = ""
    for i in range(0, len(mRNA), 3):
        codon = mRNA[i:i+3]
        protein += (correctCodonChart[codon] + '-')
    return protein



# Press the green button in the gutter to run the script.
if __name__ == '__main__':
    #print(transcriptionWRONG(sampleDNA))
    #print(translationOLD(transcriptionWRONG(sampleDNA)))
    print(translation(sampleRNA))

# See PyCharm help at https://www.jetbrains.com/help/pycharm/
